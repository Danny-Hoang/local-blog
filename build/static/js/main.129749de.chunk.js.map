{"version":3,"sources":["common/util.js","components/ArticleList.js","components/MyCustomBlock.js","components/ViewArticle.js","components/CategoryList.js","components/Home.js","components/TagView.js","components/CategoryView.js","components/CodeViewer.js","components/SnippetViewer.js","components/SnippetList.js","App.js","serviceWorker.js","index.js"],"names":["toSlug","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","ArticleList","props","articles","Wrap","map","e","slug","title","console","log","ArticleTitle","to","id","key","onClick","styled","NavLink","div","React","memo","block","contentState","useState","value","setValue","useParams","setShowCode","fileNameID","setFileNameID","history","useHistory","useEffect","axios","post","then","response","article","data","catch","error","className","Textarea","onPaste","preventDefault","htmlData","clipboardData","getData","content","html","onChange","target","Footer","Tab","push","textarea","ViewArticle","v","setArticle","style","margin","width","dangerouslySetInnerHTML","__html","contentEditable","CategoryList","categories","setCategories","t","CategoryItem","name","Home","TagView","setArticles","CategoryView","CodeViewer","StyleSyntaxHighlighter","showLineNumbers","language","githubGist","code","SyntaxHighlighter","SnippetViewer","setContent","fileName","EditorContainer","spellCheck","spellcheck","SnippetList","snippets","setSnippets","s","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.129749de.chunk.js","sourcesContent":["export const toSlug = (string) => {\r\n    const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\r\n    const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\r\n    const p = new RegExp(a.split('').join('|'), 'g')\r\n    return string.toString().toLowerCase()\r\n        .replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a')\r\n        .replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e')\r\n        .replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i')\r\n        .replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o')\r\n        .replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u')\r\n        .replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y')\r\n        .replace(/đ/gi, 'd')\r\n        .replace(/\\s+/g, '-')\r\n        .replace(p, c => b.charAt(a.indexOf(c)))\r\n        .replace(/&/g, '-and-')\r\n        .replace(/[^\\w\\-]+/g, '')\r\n        .replace(/\\-\\-+/g, '-')\r\n        .replace(/^-+/, '')\r\n        .replace(/-+$/, '')\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { toSlug } from 'common/util';\r\n\r\nconst ArticleList = (props) => {\r\n    const { articles } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Wrap>\r\n                {\r\n                    articles.map(e => {\r\n                        const slug = toSlug(e.title);\r\n                        console.log(slug)\r\n                        return (\r\n                            <ArticleTitle to={`/article/${slug}/${e.id}`} key={e.title} onClick={null}>{e.title}</ArticleTitle>\r\n                        )\r\n                    })\r\n                }\r\n            </Wrap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleList;\r\n\r\nconst ArticleTitle = styled(NavLink)`\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    line-height: 32px;\r\n    color: rgb(41, 43, 44);\r\n    cursor: pointer;\r\n    text-align: left;\r\n    display: block;\r\n    text-transform: capitalize;\r\n    text-decoration: none;\r\n    &:hover {\r\n        color: #5488c7;\r\n    }\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    width: 600px;\r\n    margin: 0 auto;\r\n`","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n  } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst MyCustomBlock = (props) => {\r\n    const { block, contentState } = props;\r\n\r\n    const [value, setValue] = useState('');\r\n    const { id } = useParams();\r\n    const [showCode, setShowCode] = useState(id ? true : false)\r\n    const [fileNameID, setFileNameID] = useState('');\r\n    const [title, setTitle] = useState('');\r\n\r\n    const history = useHistory() \r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n\r\n            axios.post('/article', {\r\n                id\r\n            })\r\n                .then(function (response) {\r\n                    const { article } = response.data;\r\n                    console.log(article)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }, [])\r\n\r\n\r\n    const onClickView = () => {\r\n        if(fileNameID) {\r\n            history.push(`/article/${title || 'untitled'}/${fileNameID}`)\r\n        }\r\n        // setShowCode(false);\r\n        // axios.post('/saveChanges', {\r\n        //     content: value,\r\n        //     fileName\r\n        // })\r\n        //     .then(function (response) {\r\n        //         console.log('data saved');\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //         console.log(error);\r\n        //     });\r\n\r\n    }\r\n\r\n    const handleTextAreaInput = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n    const onClickSource = () => {\r\n        setShowCode(true);\r\n    }\r\n\r\n\r\n    const handlePaste = (e, data) => {\r\n        e.preventDefault();\r\n        const htmlData = e.clipboardData.getData('text/html');\r\n        htmlData.replace(/\\<body\\>/, '');\r\n        htmlData.replace(/\\<\\/body\\>/, '');\r\n        htmlData.replace(/\\<html\\>/, '');\r\n        htmlData.replace(/\\<\\/html\\>/, '');\r\n        // setValue(htmlData);\r\n\r\n        axios.post('/saveArticle', {\r\n            content: htmlData\r\n        })\r\n            .then(function (response) {\r\n                const { html, id } = response.data;\r\n                setValue(html);\r\n                setFileNameID(id)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    return (\r\n        <div className='MyCustomBlock'>\r\n          \r\n            <Textarea onPaste={handlePaste} value={value} onChange={handleTextAreaInput}></Textarea>\r\n                        {/* <div style={{ margin: '0 auto', width: '50vw', }} dangerouslySetInnerHTML={createMarkup(value)} contentEditable={false}></div> */}\r\n            <Footer>\r\n                <Tab onClick={onClickView}>view</Tab>\r\n                <Tab onClick={onClickSource}>source</Tab>\r\n            </Footer>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default React.memo(MyCustomBlock);\r\n\r\nconst Textarea = styled.textarea`\r\n    outline: none;\r\n    width: 600px;\r\n    margin-top: 100px;\r\n    height: calc(100vh - 200px);\r\n    border: 1px solid #ddd;\r\n    padding: 20px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n    position: fixed;\r\n    border-top: 1px solid #eee;\r\n    bottom: 0;\r\n    width: 100vw;\r\n    display: flex;\r\n`\r\n\r\nconst Tab = styled.div`\r\n    padding: 0 20px;\r\n    cursor: pointer;\r\n    line-height: 24px;\r\n    &:last-child {\r\n        border-left: 1px solid #eee;\r\n    }\r\n\r\n`","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst ViewArticle = () => {\r\n\r\n    const { id } = useParams();\r\n    const [article, setArticle] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const createMarkup = (v) => {\r\n        return { __html: v };\r\n    }\r\n\r\n    const deleteArticle = () => {\r\n        axios.post('/deleteArticle', {\r\n            id\r\n        })\r\n            .then(function (response) {\r\n\r\n                history.push('/')\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const newArticle = () => {\r\n        history.push('/new')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n\r\n            axios.post('/article', {\r\n                id\r\n            })\r\n                .then(function (response) {\r\n                    const { article } = response.data;\r\n                    console.log(article)\r\n                    setArticle(article);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div style={{ margin: '0 auto', width: '50vw', }} dangerouslySetInnerHTML={createMarkup(article?.html || '')} contentEditable={false}></div>\r\n            <div>\r\n                <div onClick={newArticle}>New Article</div>\r\n                <div onClick={deleteArticle}>Delete Article</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewArticle;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { toSlug } from 'common/util';\r\n\r\nconst CategoryList = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    useEffect(() => {\r\n        axios.post('/api/getAllCategories')\r\n            .then(function (response) {\r\n                const data = response.data.categories\r\n\r\n                setCategories(data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n\r\n    return (\r\n        <Wrap>\r\n            {\r\n                categories.map(t => (\r\n                    <CategoryItem to={`/category/${toSlug(t.name)}/${t.id}`} key={t.id}>{t.name}</CategoryItem>\r\n                ))\r\n            }\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default CategoryList;\r\n\r\nconst Wrap = styled.div`\r\n    width: 600px;\r\n`\r\n\r\nconst CategoryItem = styled(NavLink)`\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    line-height: 32px;\r\n    display: block;\r\n    text-decoration: none;\r\n    text-transform: capitalize;\r\n    text-align: left;\r\n`","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { toSlug } from 'common/util';\r\nimport CategoryList from './CategoryList';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <CategoryList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { toSlug } from 'common/util';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport ArticleList from './ArticleList';\r\n\r\nconst TagView = () => {\r\n\r\n    const history = useHistory();\r\n    const [articles, setArticles] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n\r\n            axios.post('/api/getArticlesByTag', {\r\n                id\r\n            })\r\n                .then(function (response) {\r\n                    const data = response.data.articles;\r\n                    setArticles(data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <ArticleList articles={articles} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagView;\r\n\r\nconst TagItem = styled.div`\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    line-height: 32px;\r\n\r\n`","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { toSlug } from 'common/util';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport ArticleList from './ArticleList';\r\n\r\nconst CategoryView = () => {\r\n\r\n    const history = useHistory();\r\n    const [articles, setArticles] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n\r\n            axios.post('/api/getArticlesByCategory', {\r\n                id\r\n            })\r\n                .then(function (response) {\r\n                    const data = response.data.articles;\r\n                    setArticles(data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <ArticleList articles={articles} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryView;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst CodeViewer = (props) => {\r\n    return (\r\n        <StyleSyntaxHighlighter className={props.className || ''} showLineNumbers language=\"javascript\" style={githubGist}>\r\n            {props.code}\r\n        </StyleSyntaxHighlighter>\r\n    );\r\n};\r\n\r\nexport default CodeViewer;\r\n\r\nconst StyleSyntaxHighlighter = styled(SyntaxHighlighter)`\r\n    span.comment.linenumber.react-syntax-highlighter-line-number {\r\n        color: #ccc;\r\n    }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport CodeViewer from './CodeViewer';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst SnippetViewer = () => {\r\n\r\n    const [content, setContent] = useState('');\r\n    const { fileName } = useParams();\r\n\r\n    useEffect(() => {\r\n        if (fileName) {\r\n\r\n            axios.post('/api/getSnippet', {\r\n                fileName\r\n            })\r\n                .then(function (response) {\r\n                    const content = response.data.content;\r\n                    setContent(content);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }, [])\r\n\r\n    const onInput = (e) => {\r\n        setContent(e.target.value);\r\n    }\r\n    return (\r\n        <div>\r\n            <EditorContainer className=\"code-edit-container\">\r\n                    <CodeViewer className=\"code-output\" code={content} />\r\n                    <Textarea spellCheck=\"false\" className=\"code-input\" spellcheck=\"false\" value={content} onChange={onInput} />\r\n            </EditorContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SnippetViewer;\r\n\r\n\r\nconst Textarea = styled.textarea`\r\n    caret-color: black;\r\n    z-index: 9;\r\n    color: transparent;\r\n    top: 8px;\r\n    left: 46px;\r\n    color: transparent;\r\n    outline: none;\r\n`\r\n\r\nconst EditorContainer = styled.div`\r\n    position: relative;\r\n    height: fit-content;\r\n    width: fit-content;\r\n    background-color: hsl(212, 35%, 95%);\r\n    margin: 1em 0;\r\n    font-size: 13px;\r\n\r\n    .code-input,\r\n    .code-output {\r\n        width: 100%;\r\n        padding: 0;\r\n        border: none;\r\n        font-family: source-code-pro,Menlo,Monaco,Consolas,\"Courier New\",monospace;;\r\n        font-size: 0.8rem;\r\n        background: transparent;\r\n        white-space: pre-wrap;\r\n        line-height: 1.5em;\r\n        word-wrap: break-word;\r\n        font-size: 1em;\r\n    }\r\n    \r\n    .code-input {\r\n        position: absolute;\r\n        height: 100%;\r\n        opacity: 1;\r\n        margin: 0;\r\n        resize: none;\r\n    }\r\n    \r\n    .code-output {\r\n        pointer-events: none;\r\n        z-index: 3;\r\n        margin: 0;\r\n        overflow-y: auto;\r\n    }\r\n    \r\n    code {\r\n        /* position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        margin: 0;\r\n        padding: 1rem; */\r\n        /* display: block;\r\n        color: hsl(0, 0%, 40%); */\r\n    }\r\n\r\n    &:not(pre) > code[class*=\"language-\"], & pre[class*=\"language-\"] {\r\n        background: transparent;\r\n        margin: 0;\r\n    }\r\n`\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    useParams,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport CodeViewer from './CodeViewer';\r\n\r\nconst SnippetList = (props) => {\r\n    const [snippets, setSnippets] = useState([]);\r\n    const history = useHistory();\r\n    const viewSnippet = (fileName) => {\r\n        history.push(`/snippet/${fileName}`)\r\n    }\r\n    useEffect(() => {\r\n        axios.post('/api/getAllSnippets')\r\n            .then(function (response) {\r\n                const data = response.data.snippets;\r\n                setSnippets(data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }, [])\r\n    return (\r\n        <div >\r\n            {\r\n                snippets.map(s => (\r\n                    <div key={s} onClick={() => viewSnippet(s)}>{s}</div>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SnippetList;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport styled from 'styled-components';\nimport './App.css';\nimport ArticleList from './components/ArticleList';\nimport MyCustomBlock from 'components/MyCustomBlock';\nimport ViewArticle from 'components/ViewArticle';\nimport Home from 'components/Home';\nimport TagView from 'components/TagView';\nimport CategoryView from 'components/CategoryView';\nimport SnippetViewer from 'components/SnippetViewer';\nimport SnippetList from 'components/SnippetList';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path=\"/article/:name/:id\" exact>\n                        <ViewArticle />   \n                    </Route>\n                    <Route path=\"/new\">\n                        <MyCustomBlock />   \n                    </Route>\n                    <Route path=\"/snippets\">\n                        <SnippetList />   \n                    </Route>\n                    <Route path=\"/snippet/:fileName\" exact>\n                        <SnippetViewer />   \n                    </Route>\n                    {/* <Route path=\"/\">\n                        <ArticleList />\n                    </Route> */}\n                    <Route path=\"/tag/:name/:id\" exact>\n                        <TagView />\n                    </Route>\n                    <Route path=\"/category/:name/:id\" exact>\n                        <CategoryView />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                 \n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n\nconst Div = styled.div`\n    width: 600px;\n    margin: auto;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}